#!/usr/bin/env python




##################################################
## DEPENDENCIES
import sys
import os
import os.path
try:
    import builtins as builtin
except ImportError:
    import __builtin__ as builtin
from os.path import getmtime, exists
import time
import types
from Cheetah.Version import MinCompatibleVersion as RequiredCheetahVersion
from Cheetah.Version import MinCompatibleVersionTuple as RequiredCheetahVersionTuple
from Cheetah.Template import Template
from Cheetah.DummyTransaction import *
from Cheetah.NameMapper import NotFound, valueForName, valueFromSearchList, valueFromFrameOrSearchList
from Cheetah.CacheRegion import CacheRegion
import Cheetah.Filters as Filters
import Cheetah.ErrorCatchers as ErrorCatchers
from xhtml import xhtml

##################################################
## MODULE CONSTANTS
VFFSL=valueFromFrameOrSearchList
VFSL=valueFromSearchList
VFN=valueForName
currentTime=time.time
__CHEETAH_version__ = '2.4.4'
__CHEETAH_versionTuple__ = (2, 4, 4, 'development', 0)
__CHEETAH_genTime__ = 1348528239.629052
__CHEETAH_genTimestamp__ = 'Mon Sep 24 16:10:39 2012'
__CHEETAH_src__ = 'mainmenu.tmpl'
__CHEETAH_srcLastModified__ = 'Thu Dec  8 06:01:44 2011'
__CHEETAH_docstring__ = 'Autogenerated by Cheetah: The Python-Powered Template Engine'

if __CHEETAH_versionTuple__ < RequiredCheetahVersionTuple:
    raise AssertionError(
      'This template was compiled with Cheetah version'
      ' %s. Templates compiled before version %s must be recompiled.'%(
         __CHEETAH_version__, RequiredCheetahVersion))

##################################################
## CLASSES

class mainmenu(xhtml):

    ##################################################
    ## CHEETAH GENERATED METHODS


    def __init__(self, *args, **KWs):

        super(mainmenu, self).__init__(*args, **KWs)
        if not self._CHEETAH__instanceInitialized:
            cheetahKWArgs = {}
            allowedKWs = 'searchList namespaces filter filtersLib errorCatcher'.split()
            for k,v in KWs.items():
                if k in allowedKWs: cheetahKWArgs[k] = v
            self._initCheetahInstance(**cheetahKWArgs)
        

    def title(self, **KWS):



        ## CHEETAH: generated from #def title at line 12, col 1.
        trans = KWS.get("trans")
        if (not trans and not self._CHEETAH__isBuffering and not callable(self.transaction)):
            trans = self.transaction # is None unless self.awake() was called
        if not trans:
            trans = DummyTransaction()
            _dummyTrans = True
        else: _dummyTrans = False
        write = trans.response().write
        SL = self._CHEETAH__searchList
        _filter = self._CHEETAH__currentFilter
        
        ########################################
        ## START - generated method body
        
        write(u'''Main menu
''')
        
        ########################################
        ## END - generated method body
        
        return _dummyTrans and trans.response().getvalue() or ""
        

    def body(self, **KWS):



        ## CHEETAH: generated from #def body at line 15, col 1.
        trans = KWS.get("trans")
        if (not trans and not self._CHEETAH__isBuffering and not callable(self.transaction)):
            trans = self.transaction # is None unless self.awake() was called
        if not trans:
            trans = DummyTransaction()
            _dummyTrans = True
        else: _dummyTrans = False
        write = trans.response().write
        SL = self._CHEETAH__searchList
        _filter = self._CHEETAH__currentFilter
        
        ########################################
        ## START - generated method body
        
        write(u'''<h1>Welcome</h1>
<p>Hello ''')
        _v = VFFSL(SL,"user",True) # u'$user' on line 17, col 10
        if _v is not None: write(_filter(_v, rawExpr=u'$user')) # from line 17, col 10.
        write(u'''. You are working on the ''')
        _v = VFFSL(SL,"language",True) # u'$language' on line 17, col 40
        if _v is not None: write(_filter(_v, rawExpr=u'$language')) # from line 17, col 40.
        write(u''' translation for <a href="''')
        _v = VFFSL(SL,"appsite",True) # u'$appsite' on line 17, col 75
        if _v is not None: write(_filter(_v, rawExpr=u'$appsite')) # from line 17, col 75.
        write(u'''">''')
        _v = VFFSL(SL,"appname",True) # u'$appname' on line 17, col 85
        if _v is not None: write(_filter(_v, rawExpr=u'$appname')) # from line 17, col 85.
        write(u'''</a>, version ''')
        _v = VFFSL(SL,"appversion",True) # u'$appversion' on line 17, col 107
        if _v is not None: write(_filter(_v, rawExpr=u'$appversion')) # from line 17, col 107.
        write(u'''.</p>
<h1>Tasks</h1>
<ul>
\t<li><a href="../TranslateStrings?view=all">Translate strings</a></li>
''')
        if VFFSL(SL,"translate_accelerators",True) == True: # generated from line 21, col 2
            write(u'''\t<li><a href="../ChooseAccelerators?view=all">Assign keyboard shortcuts</a></li>
''')
        if VFFSL(SL,"translate_mnemonics",True) == True: # generated from line 24, col 2
            write(u'''\t<li><a href="../ChooseMnemonics?view=all">Choose mnemonics</a></li>
''')
        if VFFSL(SL,"audio_support",True) == True: # generated from line 27, col 2
            write(u'''\t\t<li><a href="../RecordAllPrompts">Record your prompts with Obi and upload the data</a></li>
''')
        if VFFSL(SL,"addldocsuri",True) != None and VFFSL(SL,"addldocsuri",True) != "": # generated from line 30, col 2
            write(u'''\t<li><a href="''')
            _v = VFFSL(SL,"addldocsuri",True) # u'$addldocsuri' on line 31, col 15
            if _v is not None: write(_filter(_v, rawExpr=u'$addldocsuri')) # from line 31, col 15.
            write(u'''">Download additional documents for translation</a> (''')
            _v = VFFSL(SL,"addldocsdesc",True) # u'$addldocsdesc' on line 31, col 80
            if _v is not None: write(_filter(_v, rawExpr=u'$addldocsdesc')) # from line 31, col 80.
            write(u''')</li>
''')
        write(u'''</ul>
''')
        if VFFSL(SL,"comments",True) != None and VFFSL(SL,"comments",True) != "": # generated from line 34, col 1
            write(u'''<h2>Comments</h2>
<p>''')
            _v = VFFSL(SL,"comments",True) # u'$comments' on line 36, col 4
            if _v is not None: write(_filter(_v, rawExpr=u'$comments')) # from line 36, col 4.
            write(u'''</p>
''')
        
        ########################################
        ## END - generated method body
        
        return _dummyTrans and trans.response().getvalue() or ""
        

    def writeBody(self, **KWS):



        ## CHEETAH: main method generated for this template
        trans = KWS.get("trans")
        if (not trans and not self._CHEETAH__isBuffering and not callable(self.transaction)):
            trans = self.transaction # is None unless self.awake() was called
        if not trans:
            trans = DummyTransaction()
            _dummyTrans = True
        else: _dummyTrans = False
        write = trans.response().write
        SL = self._CHEETAH__searchList
        _filter = self._CHEETAH__currentFilter
        
        ########################################
        ## START - generated method body
        
        # 
        # Template variables:
        # 	user = user's real name
        # 	language = language name
        # 	actions = list of menu links
        #     addldocsuri = URI for additional documents download
        #     addldocsdesc = description of the additional documents
        write(u'''
''')
        
        ########################################
        ## END - generated method body
        
        return _dummyTrans and trans.response().getvalue() or ""
        
    ##################################################
    ## CHEETAH GENERATED ATTRIBUTES


    _CHEETAH__instanceInitialized = False

    _CHEETAH_version = __CHEETAH_version__

    _CHEETAH_versionTuple = __CHEETAH_versionTuple__

    _CHEETAH_genTime = __CHEETAH_genTime__

    _CHEETAH_genTimestamp = __CHEETAH_genTimestamp__

    _CHEETAH_src = __CHEETAH_src__

    _CHEETAH_srcLastModified = __CHEETAH_srcLastModified__

    _mainCheetahMethod_for_mainmenu= 'writeBody'

## END CLASS DEFINITION

if not hasattr(mainmenu, '_initCheetahAttributes'):
    templateAPIClass = getattr(mainmenu, '_CHEETAH_templateClass', Template)
    templateAPIClass._addCheetahPlumbingCodeToClass(mainmenu)


# CHEETAH was developed by Tavis Rudd and Mike Orr
# with code, advice and input from many other volunteers.
# For more information visit http://www.CheetahTemplate.org/

##################################################
## if run from command line:
if __name__ == '__main__':
    from Cheetah.TemplateCmdLineIface import CmdLineIface
    CmdLineIface(templateObj=mainmenu()).run()


